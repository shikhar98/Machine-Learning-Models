#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Sep 19 12:21:17 2018

@author: shikhar
"""
#importing libraries
import numpy as np;
import pandas as pd;
import matplotlib.pyplot as plt;
# Importing the dataset
dataset =pd.read_csv('50_Startups.csv');
X=dataset.iloc[:,:-1].values
y=dataset.iloc[:,4].values

#Encoding categorical data
from sklearn.preprocessing import LabelEncoder ,OneHotEncoder;
labelencoder=LabelEncoder()
X[:,3]=labelencoder.fit_transform(X[:,3])
onehotencoder=OneHotEncoder(categorical_features=[3])
X=onehotencoder.fit_transform(X).toarray()


#Removing the dummy variable
X=X[:,1:]

#Splitting the data into training and testing data
from sklearn.cross_validation import train_test_split
X_train, X_test, y_train, y_test=train_test_split(X,y,test_size=0.2,random_state=0)

#Fitting multiple linear regression
from sklearn.linear_model import LinearRegression;
regressor=LinearRegression()
regressor.fit(X_train,y_train)

#predicting the new vlues over testing data
y_pred=regressor.predict(X_test)

#Making an optimal version of Multiple Linear Regression using Backward Elimination Method

import statsmodels.formula.api as sm
X=np.append(arr=np.ones((50,1)).astype(int), values=X,axis=1)
X_opt=X[:,[0,1,2,3,4,5]]
regressor_OLS=sm.OLS(endog=y,exog=X_opt).fit()
regressor_OLS.summary()
X_opt=X[:,[0,1,3,4,5]]
regressor_OLS=sm.OLS(endog=y,exog=X_opt).fit()
regressor_OLS.summary()
X_opt=X[:,[0,3,4,5]]
regressor_OLS=sm.OLS(endog=y,exog=X_opt).fit()
regressor_OLS.summary()
X_opt=X[:,[0,3,5]]
regressor_OLS=sm.OLS(endog=y,exog=X_opt).fit()
regressor_OLS.summary() 
X_opt=X[:,[0,3]]
regressor_OLS=sm.OLS(endog=y,exog=X_opt).fit()
regressor_OLS.summary() 